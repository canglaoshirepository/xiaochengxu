server:
  port: 10000
config:
  nacos:
    ip: 127.0.0.1
    port: 8848
spring:
  application:
    name: kafkaProducer
  kafka:
    bootstrap-servers: 127.0.0.1:9092
  ###########【初始化生产者配置】###########
  # 重试次数
    producer:
      retries: 0
  # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      acks: 1
  # 批量大小
      batch-size: 16384
  # 提交延时
      properties:
        linger.ms: 0
  # 当生产端积累的消息达到batch-size或接收到消息linger.ms后,生产者就会将消息提交给kafka
  # linger.ms为0表示每接收到一条消息就提交给kafka,这时候batch-size其实就没用了
  # 生产端缓冲区大小
      buffer-memory: 33554432
  # Kafka提供的序列化和反序列化类
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  # 自定义分区器
  # spring.kafka.producer.properties.partitioner.class=com.felix.kafka.producer.CustomizePartitioner
  cloud:
    nacos:
      discovery:
        enabled: true
        service: ${spring.application.name}
        server-addr: ${config.nacos.ip}:${config.nacos.port}
